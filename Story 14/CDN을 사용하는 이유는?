# CDN을 사용하는 이유는?

# why? 
- 현재 진행하고 있는 프로젝트에 CDN을 적용해야하는지 알아보기 위해 정리를 해보자


@ CDN을 사용하면 어떤 장점이 있는지?
- 1. 서버의 과부화를 막는다.
- 2. 물리적거리로 인한 속도 저하를 막는다
- 3. 보안상의 이점 


@ 왜 서버의 과부화를 막아야 하는지?
- 1.  사용자가 느린 응답 속도에 답답해하며, 심하면 서버가 다운될 수도 있음
- 2. 성능이 좋은 서버를 사용한다면 비용이 상승한다. 하나의 서버로 모든 요청을 처리하게 되면 대역폭을 넓혀야 해서 비용이 발생한다.


@ 대역폭이란 무엇인지?
- 정해진 시간에 얼마나 많은 데이터를 보낼 수 있는지
- 대역폭이 좁다면 속도가 느려서 -> 웹 사이트 이용하는 사용자가 불편함을 겪는다
- 2차선 도로를 4차선 도로로 폭을 확장하는것과 비슷함
- 대역폭을 넓힐수록 비용이 발생


@ 그럼, 어떻게 과부화를 막을까? -> CDN을 사용하자
- CDN은 엣지(edge)를 이용한다
- 엣지는 업체가 CDN 서비스를 운영하기 위해 세계 각지에 설치한 각 서버를 의미한다.
- 내서버에서 제공하고자 하는 컨텐츠(웹페이지, 이미지, 영상)등을 각국 엣지의 캐시를 저장해서 요청이 일어난 지역의 응답을 엣지가 대신하도록 한다.
- 내서버로 몰릴 트랙픽을 각 엣지로 분산 시켜서 과부화를 막을 수 있게된다.


@ 물리적인 거리로 인한 속도저하 -> CDN으로 해결 가능!
- 미국에 사는 존씨가 서울에 있는 서버의 웹사이트를 이용한다면 서버의 물리적 거리가 멀어서 느릴 것입니다.
- 미국에 있는 엣지에서 존씨에게 컨텐츠를 제공함으로써 해결할 수 있는데,
이 때 미국의 엣지에 존씨가 요청한 컨텐츠가 없다면 -> 미국의 엣지가 서울에 있는 서버에서 컨텐츠를 받아와 캐싱을 합니다. (이게 동적캐싱)


@ 동적캐싱과 정적캐싱
- 정적 캐싱 - 캐싱할 컨텐츠를 미리 엣지에 보내는 것 
- 동적 캐싱  - 사용자가 요청을 보낼때마다 엣지에 요청한 컨텐츠가 있는지 확인한다 
이때에 있는 경우를 -> 'cache hit' 
없는 경우를 -> 'cache miss' -> 위의 예처럼 해당 서버에서 엣지로 동적캐싱


@ CDN 사용하면 다른 이점은? -> 보안!
- 1. 보안등급이 상승
- 2. DDOS에 대한 강력한 방어책
